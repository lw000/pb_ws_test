// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ty.proto

/*
Package ty is a generated protocol buffer package.

It is generated from these files:
	ty.proto

It has these top-level messages:
	ReqHeart
	AckHeart
	ReqEcho
	AckEcho
	ReqLogin
	AckLogin
	ReqLogout
	AckLogout
*/
package ty

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReqHeart struct {
}

func (m *ReqHeart) Reset()                    { *m = ReqHeart{} }
func (m *ReqHeart) String() string            { return proto.CompactTextString(m) }
func (*ReqHeart) ProtoMessage()               {}
func (*ReqHeart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AckHeart struct {
}

func (m *AckHeart) Reset()                    { *m = AckHeart{} }
func (m *AckHeart) String() string            { return proto.CompactTextString(m) }
func (*AckHeart) ProtoMessage()               {}
func (*AckHeart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReqEcho struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Tm   int64  `protobuf:"varint,2,opt,name=tm" json:"tm,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ReqEcho) Reset()                    { *m = ReqEcho{} }
func (m *ReqEcho) String() string            { return proto.CompactTextString(m) }
func (*ReqEcho) ProtoMessage()               {}
func (*ReqEcho) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReqEcho) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReqEcho) GetTm() int64 {
	if m != nil {
		return m.Tm
	}
	return 0
}

func (m *ReqEcho) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type AckEcho struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *AckEcho) Reset()                    { *m = AckEcho{} }
func (m *AckEcho) String() string            { return proto.CompactTextString(m) }
func (*AckEcho) ProtoMessage()               {}
func (*AckEcho) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AckEcho) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AckEcho) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReqLogin struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Tm   int64  `protobuf:"varint,2,opt,name=tm" json:"tm,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ReqLogin) Reset()                    { *m = ReqLogin{} }
func (m *ReqLogin) String() string            { return proto.CompactTextString(m) }
func (*ReqLogin) ProtoMessage()               {}
func (*ReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReqLogin) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReqLogin) GetTm() int64 {
	if m != nil {
		return m.Tm
	}
	return 0
}

func (m *ReqLogin) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type AckLogin struct {
	Code int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *AckLogin) Reset()                    { *m = AckLogin{} }
func (m *AckLogin) String() string            { return proto.CompactTextString(m) }
func (*AckLogin) ProtoMessage()               {}
func (*AckLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AckLogin) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AckLogin) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReqLogout struct {
	Id   int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Tm   int64  `protobuf:"varint,2,opt,name=tm" json:"tm,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *ReqLogout) Reset()                    { *m = ReqLogout{} }
func (m *ReqLogout) String() string            { return proto.CompactTextString(m) }
func (*ReqLogout) ProtoMessage()               {}
func (*ReqLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReqLogout) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReqLogout) GetTm() int64 {
	if m != nil {
		return m.Tm
	}
	return 0
}

func (m *ReqLogout) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type AckLogout struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *AckLogout) Reset()                    { *m = AckLogout{} }
func (m *AckLogout) String() string            { return proto.CompactTextString(m) }
func (*AckLogout) ProtoMessage()               {}
func (*AckLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AckLogout) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AckLogout) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*ReqHeart)(nil), "ty.ReqHeart")
	proto.RegisterType((*AckHeart)(nil), "ty.AckHeart")
	proto.RegisterType((*ReqEcho)(nil), "ty.ReqEcho")
	proto.RegisterType((*AckEcho)(nil), "ty.AckEcho")
	proto.RegisterType((*ReqLogin)(nil), "ty.ReqLogin")
	proto.RegisterType((*AckLogin)(nil), "ty.AckLogin")
	proto.RegisterType((*ReqLogout)(nil), "ty.ReqLogout")
	proto.RegisterType((*AckLogout)(nil), "ty.AckLogout")
}

func init() { proto.RegisterFile("ty.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0xa9, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0xa9, 0x54, 0xe2, 0xe2, 0xe2, 0x08, 0x4a, 0x2d, 0xf4,
	0x48, 0x4d, 0x2c, 0x2a, 0x01, 0xb1, 0x1d, 0x93, 0xb3, 0x21, 0x6c, 0x5b, 0x2e, 0xf6, 0xa0, 0xd4,
	0x42, 0xd7, 0xe4, 0x8c, 0x7c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0xe6, 0x20, 0xa6, 0xcc, 0x14, 0x10, 0xbf, 0x24, 0x57, 0x82, 0x09, 0xc2, 0x2f, 0xc9, 0x15, 0x12,
	0xe2, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95,
	0x0c, 0xb9, 0xd8, 0x1d, 0x93, 0xb3, 0xc1, 0xda, 0x85, 0xb8, 0x58, 0x92, 0xf3, 0x53, 0x52, 0xc1,
	0x06, 0xf0, 0x06, 0x81, 0xd9, 0x70, 0x2d, 0x4c, 0x48, 0x5a, 0xec, 0xc0, 0x2e, 0xf1, 0xc9, 0x4f,
	0xcf, 0xcc, 0x23, 0xcb, 0x4a, 0x23, 0xb0, 0xeb, 0x21, 0xfa, 0x91, 0xed, 0x64, 0xc6, 0x63, 0xa7,
	0x3d, 0x17, 0x27, 0xc4, 0xce, 0xfc, 0xd2, 0x12, 0xb2, 0x2c, 0x35, 0xe6, 0xe2, 0x84, 0x58, 0x0a,
	0x32, 0x80, 0x48, 0x9f, 0x26, 0xb1, 0x81, 0x83, 0xdf, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xa0,
	0x28, 0x4a, 0xfd, 0x8a, 0x01, 0x00, 0x00,
}
